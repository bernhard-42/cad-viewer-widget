[build-system]
requires = ["hatchling>=1.5.0", "jupyterlab>=4.4.0,<5", "hatch-nodejs-version", "hatch-jupyter-builder>=0.5"]
build-backend = "hatchling.build"

[project]
name = "cad_viewer_widget"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
classifiers = [
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Framework :: Jupyter :: JupyterLab :: 4",
    "Framework :: Jupyter :: JupyterLab :: Extensions",
    "Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = ["ipywidgets~=8.1.5", "jupyterlab~=4.4.0", "pyparsing", "numpy"]

dynamic = ["version", "description", "authors", "urls", "keywords"]

[tool.hatch.version]
source = "nodejs"
path = "js/package.json"

[tool.hatch.metadata.hooks.nodejs]
fields = ["description", "authors", "urls"]
path = "js/package.json"

[tool.hatch.build.targets.sdist]
artifacts = ["cad_viewer_widget/labextension"]
exclude = [".github", "binder", "examples", "docs", "notebooks", ".[a-z]*"]

[tool.hatch.build.targets.wheel.shared-data]
"cad_viewer_widget/labextension" = "share/jupyter/labextensions/cad-viewer-widget"
"install.json" = "share/jupyter/labextensions/cad-viewer-widget/install.json"

[tool.hatch.build.hooks.version]
path = "cad_viewer_widget/_version.py"

[tool.hatch.build.hooks.jupyter-builder]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "cad_viewer_widget/labextension/static/style.js",
    "cad_viewer_widget/labextension/package.json",
]
skip-if-exists = ["cad_viewer_widget/labextension/static/style.js"]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
build_cmd = "build:prod"
npm = ["yarn"]
path = "js"

[tool.hatch.build.hooks.jupyter-builder.editable-build-kwargs]
build_cmd = "build"
npm = ["yarn"]
source_dir = "js"
path = "js"
build_dir = "cad_viewer_widget/labextension"

[tool.jupyter-releaser.options]
version_cmd = "hatch version"

[tool.jupyter-releaser.hooks]
before-build-npm = [
    "python -m pip install 'jupyterlab>=4.4.0,<5'",
    "yarn",
    "yarn build:prod"
]
before-build-python = ["yarn clean"]

[tool.check-wheel-contents]
ignore = ["W002"]

# bump-my-version settings

[tool.bumpversion]
current_version = "3.0.2"
commit = false
tag = false
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(?P<release>\\D*)(?P<build>\\d*)"
serialize = ["{major}.{minor}.{patch}"]
allow_dirty = true
message = "Bump version: {current_version} â†’ {new_version}"
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
sign_tags = false
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[[tool.bumpversion.part.build]]

[[tool.bumpversion.files]]
filename = "cad_viewer_widget/_version.py"
search = 'VERSION = "{current_version}"'
replace = 'VERSION = "{new_version}"'

[[tool.bumpversion.files]]
filename = "cad_viewer_widget/widget.py"
search = '_module_version = Unicode("{current_version}"'
replace = '_module_version = Unicode("{new_version}"'

[[tool.bumpversion.files]]
filename = "cad_viewer_widget/sidecar.py"
search = '_module_version = Unicode("{current_version}"'
replace = '_module_version = Unicode("{new_version}"'

[[tool.bumpversion.files]]
filename = "js/package.json"
search = '"version": "{current_version}"'
replace = '"version": "{new_version}"'

[[tool.bumpversion.files]]
filename = "js/lib/version.js"
search = '_version = "{current_version}"'
replace = '_version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "environment.yml"
search = 'cad-viewer-widget=={current_version}'
replace = 'cad-viewer-widget=={new_version}'
